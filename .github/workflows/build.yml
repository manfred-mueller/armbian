name: Build Armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:

      build_board:
        type: choice
        description: 'Board'
        required: true
        options:
        - RockPi-4B
        - NanoPiNeo
        - OdroidXU4
        default: RockPi-4B

      build_branch:
        type: choice
        description: 'Branch'
        required: true
        options:
        - Current
        - Edge
        - Legacy
        default: Current

      build_desktop:
        type: choice
        description: 'Build desktop'
        required: true
        options:
        - Yes
        - No
        default: No

      build_release:
        type: choice
        description: 'Release'
        required: false
        options:
        - Bookworm
        - Bullseye
        - Jammy
        - Noble
        default: Bullseye
env:
  UPLOAD_IMAGE: true
  CUSTOMIZATION_SCRIPT: userpatches/customize-image.sh
  KERNEL_CONFIG: config
  UPLOAD_RELEASE: true

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    strategy:
      matrix:
        board: ["${{inputs.build_board}}"]
        branch: ["${{inputs.build_branch}}"]
        desktop: ["${{inputs.build_desktop}}"]
        release: ["${{inputs.build_release}}"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    - name: Download source code
      run: |
        pwd
        echo $GITHUB_WORKSPACE
        git clone --depth=1 --branch=main https://github.com/armbian/build
     
    - name: Build Armbian image
      id: build
      run: |
        cd build
        LowBOARD=$(echo "${{ matrix.board }}" | tr '[:upper:]' '[:lower:]')
        LowBRANCH=$(echo "${{ matrix.branch }}" | tr '[:upper:]' '[:lower:]')
        LowDESKTOP=$(echo "${{ matrix.desktop }}" | tr '[:upper:]' '[:lower:]')
        LowRELEASE=$(echo "${{ matrix.release }}" | tr '[:upper:]' '[:lower:]')
        ./compile.sh build BOARD=$LowBOARD BRANCH=$LowBRANCH BUILD_MINIMAL=no BUILD_DESKTOP=$LowDESKTOP KERNEL_CONFIGURE=no RELEASE=$LowRELEASE
        echo "status=success" >> $GITHUB_ENV
    - name: Build summary
      id: build_summary
      run: |
        echo "| Property | Value |" >> summary.md
        echo "| :--- | :--- |" >> summary.md
        echo "| Board | ${{ matrix.board }} |" >> summary.md
        echo "| Branch | ${{ matrix.branch }} |" >> summary.md
        echo "| Release | ${{ matrix.release }} |" >> summary.md
        echo "| Desktop | ${{ matrix.desktop }} |" >> summary.md
    - name: Encode summary
      id: encode_summary
      run: |
        summary=$(base64 -w 0 < summary.md)
        echo "summary_encoded=$summary" >> $GITHUB_ENV
    - name: Create or update release
      id: create_release
      run: |
        echo $summary_encoded | base64 --decode > decoded_summary.md
        if gh release view "v${{ github.run_number }}-${{ matrix.board }}" --repo "${{ github.repository }}" >/dev/null 2>&1; then
          gh release edit "v${{ github.run_number }}-${{ matrix.board }}" --repo "${{ github.repository }}" --notes-file decoded_summary.md
        else
          gh release create "v${{ github.run_number }}-${{ matrix.board }}" --repo "${{ github.repository }}" --notes-file decoded_summary.md
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Zip all Armbian files and upload as release asset
      run: |
        zip armbian_unofficial_release_${{ matrix.board }}.zip build/output/images/Armbian-unofficial*.img build/output/images/Armbian-unofficial*.img.sha build/output/images/Armbian-unofficial*.img.txt
        gh release upload "v${{ github.run_number }}-${{ matrix.board }}" "armbian_unofficial_release_${{ matrix.board }}.zip" --repo "${{ github.repository }}" --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
