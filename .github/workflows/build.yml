name: Build Armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:

      build_board:
        type: choice
        description: 'Board'
        required: true
        options:
        - RockPi-4B
        - NanoPiNeo
        - OdroidXU4
        default: RockPi-4B

      build_branch:
        type: choice
        description: 'Branch'
        required: true
        options:
        - Current
        - edge
        - Legacy
        default: Current

      build_desktop:
        type: choice
        description: 'Build desktop'
        required: true
        options:
        - Yes
        - No
        default: no

      build_release:
        type: choice
        description: 'Release'
        required: false
        options:
        - Bullseye
        - Bookworm
        - Jammy
        default: Bullseye
env:
  UPLOAD_IMAGE: true
  CUSTOMIZATION_SCRIPT: userpatches/customize-image.sh
  KERNEL_CONFIG: config
  UPLOAD_RELEASE: true

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    strategy:
      matrix:
        board: ["${{inputs.build_board}}"]
        branch: ["${{inputs.build_branch}}"]
        desktop: ["${{inputs.build_desktop}}"]
        release: ["${{inputs.build_release}}"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Download source code
      run: |
        pwd
        echo $GITHUB_WORKSPACE
        git clone --depth=1 --branch=main https://github.com/armbian/build
     
    - name: Build Armbian image
      id: build
      run: |
        cd build
        BOARD=$(echo "${{ matrix.board }}" | tr '[:upper:]' '[:lower:]')
        BRANCH=$(echo "${{ matrix.branch }}" | tr '[:upper:]' '[:lower:]')
        DESKTOP=$(echo "${{ matrix.desktop }}" | tr '[:upper:]' '[:lower:]')
        RELEASE=$(echo "${{ matrix.release }}" | tr '[:upper:]' '[:lower:]')
        ./compile.sh build BOARD=${{ matrix.board }} BRANCH=${{ matrix.branch }} BUILD_MINIMAL=no BUILD_DESKTOP=${{ matrix.desktop }} KERNEL_CONFIGURE=no RELEASE=${{ matrix.release }}
        echo "status=success" >> $GITHUB_ENV

    - name: Build summary
      id: build_summary
      run: |
        echo "| Property | Value |" >> summary.md
        echo "| :--- | :--- |" >> summary.md
        echo "| Board | ${{ matrix.board }} |" >> summary.md
        echo "| Branch | ${{ matrix.branch }} |" >> summary.md
        echo "| Release | ${{ matrix.release }} |" >> summary.md
        echo "| Desktop | ${{ matrix.desktop }} |" >> summary.md

    - name: Encode summary
      id: encode_summary
      run: |
        summary=$(base64 -w 0 < summary.md)
        echo "summary_encoded=$summary" >> $GITHUB_ENV

    - name: Create or update release
      id: create_release
      run: |
        echo $summary_encoded | base64 --decode > decoded_summary.md
        if gh release view "v${{ github.run_number }}" --repo "${{ github.repository }}" >/dev/null 2>&1; then
          gh release edit "v${{ github.run_number }}" --repo "${{ github.repository }}" --notes-file decoded_summary.md
        else
          gh release create "v${{ github.run_number }}" --repo "${{ github.repository }}" --notes-file decoded_summary.md
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload each Armbian file as release asset
      run: |
        for file in build/output/images/Armbian-unofficial*.img build/output/images/Armbian-unofficial*.img.sha build/output/images/Armbian-unofficial*.img.txt; do
          [ -e "$file" ] || continue
          gh release upload "v${{ github.run_number }}" "$file" --repo "${{ github.repository }}" --clobber
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
